{"version":3,"sources":["app.context.ts","Pages/Scan.tsx","Pages/Connected.tsx","App.tsx","index.tsx"],"names":["context","AppContext","createContext","Scan","useContext","uuid","cuuid","loading","setLoading","setDevice","setConnected","setRequest","setServices","setWritableCharacteristic","onScan","a","navigator","bluetooth","requestDevice","filters","namePrefix","optionalServices","gatt","connect","device","getPrimaryServices","BTServices","getCharacteristic","characteristic","console","log","Card","body","className","style","margin","Spinner","animation","variant","marginRight","Title","Text","Button","onClick","size","toBuffer","bytes","Uint8Array","map","byte","Number","Connected","request","services","writableCharacteristic","useColor","color","setColor","onSwitchOn","writeValueWithoutResponse","ON","onSwitchOff","OFF","disconnect","useCallback","onDisconnect","useEffect","addEventListener","onColorChange","rColor","rgb","STATIC_COLOR","r","g","b","Subtitle","marginTop","marginBottom","name","width","onChange","hideHEX","defaultContext","connected","App","useState","Provider","value","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1141765.chunk.js","sourcesContent":["import { createContext } from \"react\"\n\nconst context: any = {}\nconst AppContext = createContext(context)\n\nexport default AppContext\n","import * as React from \"react\"\nimport { useContext, useState } from \"react\"\nimport { FaBluetoothB } from \"react-icons/fa\"\nimport { Spinner, Card, Button } from \"react-bootstrap\"\nimport AppContext from \"../app.context\"\n\nconst Scan = () => {\n  const {\n    uuid,\n    cuuid,\n    loading,\n    setLoading,\n    setDevice,\n    setConnected,\n    setRequest,\n    setServices,\n    setWritableCharacteristic,\n  } = useContext(AppContext)\n  const onScan = async () => {\n    setLoading(true)\n    try {\n      const requestDevice = await (navigator as any).bluetooth.requestDevice({\n        filters: [{ namePrefix: \"Triones\" }],\n        optionalServices: [uuid],\n      })\n      const device = await requestDevice.gatt.connect()\n      const BTServices = await device.getPrimaryServices()\n      const characteristic = await BTServices[0].getCharacteristic(cuuid)\n      setServices(BTServices)\n      setWritableCharacteristic(characteristic)\n      setDevice(device)\n      setRequest(requestDevice)\n      setConnected(true)\n      setLoading(false)\n    } catch (e) {\n      console.log(e)\n      setLoading(false)\n    }\n  }\n  return (\n    <Card body>\n      {loading ? (\n        <div className=\"ble-hbox\" style={{ margin: 100 }}>\n          <Spinner\n            animation=\"border\"\n            variant=\"primary\"\n            style={{ marginRight: 10 }}\n          />\n          <span>scanning...</span>\n        </div>\n      ) : (\n        <>\n          <Card.Title>LED Strip</Card.Title>\n          <Card.Text>\n            This is an experimental project for <i>Triones</i> based LED using\n            Web Bluetooth API\n          </Card.Text>\n          <Button onClick={onScan} variant=\"primary\" size=\"lg\">\n            <FaBluetoothB size=\"25\" style={{ marginRight: 5 }} />\n            SCAN\n          </Button>\n        </>\n      )}\n    </Card>\n  )\n}\n\nexport default Scan\n","import * as React from \"react\"\nimport { useContext, useCallback, useEffect } from \"react\"\nimport { Spinner, Card, Button } from \"react-bootstrap\"\nimport { ON, OFF, STATIC_COLOR } from \"../buffer.json\"\nimport AppContext from \"../app.context\"\nimport { ColorPicker, useColor } from \"react-color-palette\"\n\nconst toBuffer = (bytes: string[]) =>\n  new Uint8Array(bytes.map(byte => Number(byte)))\n\nconst Connected = () => {\n  const {\n    uuid,\n    services,\n    request,\n    device,\n    writableCharacteristic,\n    setConnected,\n    setWritableCharacteristic,\n  } = useContext(AppContext)\n\n  const [color, setColor] = useColor(\"hex\", \"#121212\")\n\n  const onSwitchOn = async () => {\n    await writableCharacteristic.writeValueWithoutResponse(toBuffer(ON))\n  }\n\n  const onSwitchOff = async () => {\n    await writableCharacteristic.writeValueWithoutResponse(toBuffer(OFF))\n  }\n\n  const disconnect = useCallback(() => {\n    request.gatt.disconnect()\n  }, [request])\n\n  const onDisconnect = useCallback(() => {\n    setConnected(false)\n  }, [request])\n\n  useEffect(() => {\n    request.addEventListener(\"gattserverdisconnected\", onDisconnect)\n  }, [request])\n\n  const onColorChange = async (rColor: any) => {\n    const { rgb } = rColor\n    STATIC_COLOR[1] = rgb.r\n    STATIC_COLOR[2] = rgb.g\n    STATIC_COLOR[3] = rgb.b\n    await writableCharacteristic.writeValueWithoutResponse(\n      toBuffer(STATIC_COLOR)\n    )\n    setColor(rColor)\n  }\n\n  return (\n    <Card body>\n      <div className=\"ble-vbox\">\n        <Card.Subtitle style={{ marginTop: 15, marginBottom: 15 }}>\n          Connected Device: <i>{device.device.name}</i>\n        </Card.Subtitle>\n        <Button\n          className=\"space-md\"\n          onClick={onSwitchOn}\n          variant=\"primary\"\n          size=\"lg\"\n        >\n          ON\n        </Button>\n        <Button\n          className=\"space-md\"\n          onClick={onSwitchOff}\n          variant=\"danger\"\n          size=\"lg\"\n        >\n          OFF\n        </Button>\n        <div className=\"ble-hbox ble-middle\">\n          <ColorPicker\n            width={250}\n            color={color}\n            onChange={onColorChange}\n            hideHEX\n          />\n        </div>\n        <Button\n          className=\"space-md\"\n          onClick={disconnect}\n          variant=\"danger\"\n          size=\"lg\"\n        >\n          Disconnect\n        </Button>\n      </div>\n    </Card>\n  )\n}\n\nexport default Connected\n","import React from \"react\"\nimport { useState } from \"react\"\nimport { Container } from \"react-bootstrap\"\nimport AppContext from \"./app.context\"\nimport Scan from \"./Pages/Scan\"\nimport Connected from \"./Pages/Connected\"\nimport \"./App.css\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nconst defaultContext = {\n  uuid: \"0000ffd5-0000-1000-8000-00805f9b34fb\",\n  cuuid: \"0000ffd9-0000-1000-8000-00805f9b34fb\",\n  connected: false,\n  setConnected: null,\n  loading: false,\n  setLoading: null,\n  request: null,\n  setRequest: null,\n  device: null,\n  setDevice: null,\n  services: null,\n  setServices: null,\n  writableCharacteristic: null,\n  setWritableCharacteristic: null,\n}\n\nfunction App() {\n  const [writableCharacteristic, setWritableCharacteristic] = useState(null)\n  const [loading, setLoading] = useState(null)\n  const [connected, setConnected] = useState(null)\n  const [services, setServices] = useState(null)\n  const [device, setDevice] = useState(null)\n  const [request, setRequest] = useState(null)\n\n  return (\n    <AppContext.Provider\n      value={{\n        ...defaultContext,\n        connected,\n        setConnected,\n        loading,\n        setLoading,\n        writableCharacteristic,\n        setWritableCharacteristic,\n        services,\n        setServices,\n        device,\n        setDevice,\n        request,\n        setRequest,\n      }}\n    >\n      <Container className=\"ble-container\">\n        <div className=\"ble-vbox\">{!connected ? <Scan /> : <Connected />}</div>\n      </Container>\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport \"react-color-palette/lib/css/styles.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}